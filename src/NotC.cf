-- Program: list of function definitions
ProgramDefs.     Program        ::= [Def] ;


-- Function definition: type, name, parameter list, body
FunDef.          Def            ::= Type Id "(" [Param] ")" "{" [Stm] "}" ;
terminator Def "" ;


-- Types
Tbool.           Type           ::= "bool" ;
Tdouble.         Type           ::= "double" ;
Tint.            Type           ::= "int" ;
Tstring.         Type           ::= "string" ;
Tvoid.           Type           ::= "void" ;


-- Identifiers
token Id   (letter (letter | digit | '_')*) ;


-- Parameter list (type id pairs separated by ,)
FunParam.        Param          ::= Type Id ;
separator Param "," ;


-- Statements
StmDeclInit.     Stm            ::= Type Id "=" Exp ";" ;
StmDeclNoInit.   Stm            ::= Type [Id] ";" ;
StmExp.          Stm            ::= Exp ";" ;
StmReturn.       Stm            ::= "return" Exp ";" ;
StmBlock.        Stm            ::= "{" [Stm] "}" ;
StmWhile.        Stm            ::= "while" "(" Exp ")" Stm ;
StmIfElse.       Stm            ::= "if" "(" Exp ")" Stm "else" Stm ;
separator nonempty Id "," ;

terminator Stm "" ;


  -- Expressions in order of decreasing precedence --

-- Literals
ExpFalse.        Exp6           ::= "false" ;
ExpTrue.         Exp6           ::= "true" ;
ExpDouble.       Exp6           ::= Double ;
ExpInt.          Exp6           ::= Integer ;
ExpString.       Exp6           ::= String ;

-- Variables
ExpId.           Exp6           ::= Id ;

-- Function calls
ExpFunCall.      Exp6           ::= Id "(" [Exp] ")" ;
separator Exp "," ;

-- Built in operations
ExpPostIncr.     Exp6           ::= Id "++" ;
ExpPostDecr.     Exp6           ::= Id "--" ;
ExpPreIncr.      Exp6           ::= "++" Id ;
ExpPreDecr.      Exp6           ::= "--" Id ;
ExpMul.          Exp5           ::= Exp5 "*" Exp6 ;
ExpDiv.          Exp5           ::= Exp5 "/" Exp6 ;
ExpAdd.          Exp4           ::= Exp4 "+" Exp5 ;
ExpSub.          Exp4           ::= Exp4 "-" Exp5 ;
ExpLt.           Exp3           ::= Exp4 "<" Exp4 ;
ExpGt.           Exp3           ::= Exp4 ">" Exp4 ;
ExpGEq.          Exp3           ::= Exp4 ">=" Exp4 ;
ExpLEq.          Exp3           ::= Exp4 "<=" Exp4 ;
ExpEq.           Exp3           ::= Exp4 "==" Exp4 ;
ExpNEq.          Exp3           ::= Exp4 "!=" Exp4 ;
ExpAnd.          Exp2           ::= Exp2 "&&" Exp3 ;
ExpOr.           Exp1           ::= Exp1 "||" Exp2 ;

-- Assignments
ExpAss.          Exp            ::= Id "=" Exp ;

coercions Exp 6 ;


-- Single-line and multi-line comments
comment "//" ;
comment "/*" "*/" ;
